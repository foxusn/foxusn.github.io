[{"content":"安装 安装 Fcitx5 主程序和中文包：\nsudo dnf fcitx5 fcitx5-chinese-addons 开机启动 设置随系统启动，然后重启\ncp /usr/share/applications/org.fcitx.Fcitx5.desktop ~/.config/autostart/ 拼音输入法 打开 Fcitx 5 Configuration，搜索 ‘shuangpin’ 或其他拼音输入方案，点击 \u0026lsquo;Add\u0026rsquo; 添加\nGnome 扩展 安装 Gnome 扩展 Input Method Panel 以设置候选字的字体和大小 🔚\n","date":"2025-07-22T21:44:58+08:00","permalink":"https://example.com/p/fedora-%E5%AE%89%E8%A3%85%E4%B8%AD%E6%96%87%E8%BE%93%E5%85%A5%E6%B3%95/","title":"Fedora 安装中文输入法"},{"content":"安装 sudo dnf install samba samba-client samba-common 共享文件夹 mkdir -p ~/Shared chmod 777 ~/Shared # 赋权 追加内容到 /etc/samba/smb.conf\nsudo bash -c \u0026#39;cat \u0026gt;\u0026gt; /etc/samba/smb.conf \u0026lt;\u0026lt;EOF [Shared] path = /home/YOUR_USERNAME/Shared writable = yes browseable = yes guest ok = no create mask = 0666 directory mask = 0777 force user = YOUR_USERNAME EOF\u0026#39; Samba 用户 需确保这个用户在系统中存在\nsudo smbpasswd -a YOUR_USERNAME 防火墙 配置防火墙放行 Samba 服务\nsudo firewall-cmd --permanent --add-service=samba sudo firewall-cmd --reload sudo firewall-cmd --list-all SELinux 配置 SELinux 支持 Samba 访问 home 目录\nsudo setsebool -P samba_enable_home_dirs on sudo chcon -t samba_share_t ~/Shared -R 开机启动 立即启动、开机自启动\nsudo systemctl enable --now smb nmb sudo systemctl status smb nmb 连接 smb://192.168.XXX.XXX/Shared ","date":"2025-04-17T02:47:51+08:00","permalink":"https://example.com/p/fedora-%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE-samba/","title":"Fedora 安装、配置 Samba"},{"content":"密钥对 生成两个ed25519类型的密钥对\nssh-keygen -t ed25519 -f ~/.ssh/github_ssh -C \u0026#34;\u0026#34; -N \u0026#34;\u0026#34; ssh-keygen -t ed25519 -f ~/.ssh/hugo_deploy -C \u0026#34;\u0026#34; -N \u0026#34;\u0026#34; ssh-add -D ssh -T git@github.com 远程仓库 创建两个 GitHub 仓库：Public、Private 各一个。(优化中\u0026hellip;)\n工作流 参考 peaceiris/actions-hugo，添加下面的内容到 ~/Blog/hugo-blog/.github/workfows/hugo.yaml 文件， 注意替换用户名和 secret 的变量名\nname: Deploy to Public Repo on: push: branches: - main jobs: deploy: runs-on: ubuntu-latest steps: - name: Set timezone run: | sudo timedatectl set-timezone Asia/Shanghai # Checkout - name: Checkout private repo uses: actions/checkout@v4 with: submodules: recursive fetch-depth: 0 # SSH - name: Setup SSH uses: webfactory/ssh-agent@v0.9.1 with: ssh-private-key: ${{ secrets.HUGO_FOXUSN_DEPLOY }} # Install Hugo - name: Set up Hugo uses: peaceiris/actions-hugo@v3 with: hugo-version: \u0026#34;latest\u0026#34; extended: \u0026#34;true\u0026#34; # Build the Hugo site - name: Build Hugo site run: hugo --minify # Deploy to the public repo via SSH - name: Deploy to public repository run: | rm -rf deploy-repo git clone --single-branch --branch main git@github.com:username/username.github.io.git deploy-repo cd deploy-repo rm -rf * cp -r ../public/* . git config user.email \u0026#34;username@example.com\u0026#34; git config user.name \u0026#34;JohnDoe\u0026#34; git add . if git diff --cached --quiet; then echo \u0026#34;No changes to commit\u0026#34; else git commit -m \u0026#34;Auto deploy Hugo site $(date \u0026#39;+%Y-%m-%d %H:%M:%S\u0026#39;)\u0026#34; git push origin main fi 推送 添加、提交、关联远程仓库、推送\ngit add . git commit -m \u0026#34;first commit\u0026#34; git branch -M main git remote add origin git@github.com:username/hugo-blog.git git push -u origin main 排障 到 Private 仓库查看 Actions 的情况，根据报错内容查找资料、解决问题\n","date":"2025-04-06T16:15:10+08:00","permalink":"https://example.com/p/hugo-%E5%8D%9A%E5%AE%A2-%E9%83%A8%E7%BD%B2%E7%AF%87%E5%88%9B%E4%BD%9C%E4%B8%AD/","title":"Hugo 博客 部署篇（创作中）"},{"content":"安装 在 GitHub下载最新的hugo_extended_0.xxx.x_linux-amd64.tar.gz，然后解压：\ntar -xzvf hugo_extended_0.xxx.x_linux-amd64.tar.gz 移动解压得到的hugo文件到 /usr/local/bin\nsudo mv ./hugo /usr/local/bin 查看版本、验证安装\nhugo version 本地站点 新建文件夹、添加一个本地博客站点\nmkdir -p ~/Blog/ cd ~/Blog hugo new site hugo-blog cd hugo-blog 初始化本地仓库\ngit init touch .gitignore 主题 添加一个主题，这里使用hugo-theme-stack这个主题\ngit submodule add https://github.com/CaiJimmy/hugo-theme-stack/ themes/stack 新建博文\nhugo new content content/post/first-blog.md ","date":"2025-04-06T15:51:14+08:00","permalink":"https://example.com/p/hugo-%E5%8D%9A%E5%AE%A2-%E6%90%AD%E5%BB%BA%E7%AF%87/","title":"Hugo 博客 搭建篇"},{"content":"安装 dnf list installed openssh which ssh # 输出 /usr/sbin/ssh systemctl status sshd 密钥对 ssh-keygen -t ed25519 -C \u0026#34;your_email@example.com\u0026#34; -f ~/.ssh/github_ed25519 -N \u0026#34;\u0026#34; # ~/.ssh 如果不存在会自动创建；-N 参数设置 passphrase 为空 SSH Agent eval \u0026#34;$(ssh-agent -s)\u0026#34; # 启动 SSH Agent（后台进程） ssh-add ~/.ssh/github_ed25519 # 把 SSH 私钥添加进 SSH agent，让系统记住它 测试 ssh-add -l # 检查本地 SSH key ssh -T git@github.com # 测试 SSH 连接 ","date":"2025-03-10T18:22:43+08:00","permalink":"https://example.com/p/ssh-%E7%9B%B8%E5%85%B3%E5%86%85%E5%AE%B9/","title":"SSH 相关内容"},{"content":"Git 配置 git config --list # 查看当前仓库 git 配置 git config --global --list # 查看全局 git 配置 git config --get init.defaultBranch # 查看默认分支名 git config --global init.defaultBranch main # 修改默认分支为main git config --global user.name \u0026#34;your name\u0026#34; # 配置用户名 git config --global user.email \u0026#34;example@domain.com\u0026#34; # 配置邮箱 基础命令 git init # 初始化本地仓库 git add . git commit -m \u0026#34;first commit\u0026#34; git remote add origin git@github.com:username/repo.git git remote v # 查看本地记录的远程仓库地址 ssh -T git@github.com # 测试连接，注意输出的仓库名 git push -u origin main git pull origin main ","date":"2025-02-23T01:37:07+08:00","permalink":"https://example.com/p/git-%E7%9B%B8%E5%85%B3%E5%86%85%E5%AE%B9/","title":"Git 相关内容"}]